#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        scroll_screenshot: scroll_screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_1))>;
            label = "SCROLL_SCREENSHOT";
        };

        text_screenshot: text_screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_2))>;
            label = "TEXT_SCREENSHOT";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_3))>;
            label = "SCREENSHOT";
        };

        file_search: one_third {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LA(F)))>;
            label = "ONE_THIRD";
        };

        maximize: full_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LA(M)))>;
            label = "FULL_SCREEN";
        };

        prev_screen: prev_screen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(DOWN)))>;
            label = "PREV_SCREEN";
        };

        clipboard: clipboard {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LA(C)))>;
            label = "CLIPBOARD";
        };

        gif_rec: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LA(DE_G)))>;
            label = "NEW_MACRO";
        };

        next_screen: next_scr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(UP)))>;
            label = "NEXT_SCR";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            bindings = <
&kp ESC     &kp DE_Q  &kp DE_W  &kp DE_E  &kp DE_R      &kp DE_T                  &mo 3                        &kp DE_Z  &kp DE_U   &kp DE_I      &kp DE_O       &kp DE_P      &kp BSPC
&kp TAB     &kp DE_A  &kp DE_S  &kp DE_D  &kp DE_F      &kp DE_G           &none  &sk LA(LC(LEFT_GUI))  &none  &kp DE_H  &kp DE_J   &kp DE_K      &kp DE_L       &kp DE_HASH   &kp RET
&kp LSHIFT  &kp DE_Y  &kp DE_X  &kp DE_C  &kp DE_V      &kp DE_B  &none           &none                        &kp DE_N  &kp DE_M   &kp DE_COMMA  &kp DE_PERIOD  &kp DE_MINUS  &kp RSHIFT
                                &kp LALT  &kp LEFT_GUI  &mo 1                                                  &mo 2     &kp SPACE  &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        meta_layer {
            display-name = "Meta";
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &scroll_screenshot  &text_screenshot  &screenshot   &rgb_ug RGB_TOG                       &kp C_PP                &kp DE_LEFT_BRACE    &kp DE_LEFT_PARENTHESIS  &kp DE_PIPE   &kp DE_RIGHT_PARENTHESIS  &kp DE_RIGHT_BRACE    &kp DELETE
&kp CAPSLOCK    &bt BT_SEL 1  &prev_screen        &maximize         &next_screen  &rgb_ug RGB_EFF           &kp C_PREV  &none       &kp C_NEXT  &kp DE_LEFT_BRACKET  &kp DE_DQT               &kp DE_EQUAL  &kp DE_ACUTE              &kp DE_RIGHT_BRACKET  &none
&kp LSHIFT      &bt BT_SEL 2  &gif_rec            &clipboard        &file_search  &none            &none                &kp C_MUTE              &kp DE_PERCENT       &kp DE_EXCL              &kp DE_QMARK  &kp DE_ASTRK              &kp DE_PLUS           &kp RIGHT_SHIFT
                                                  &kp LEFT_ALT      &kp LEFT_GUI  &none                                                         &none                &kp SPACE                &kp RCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        function_layer {
            display-name = "Function";
            bindings = <
&none       &none             &kp DE_N1  &kp DE_N2      &kp DE_N3     &kp DE_N0                  &none         &kp DE_TILDE   &kp DE_EURO       &kp DE_AT         &kp DE_SZ     &kp DE_U_UMLAUT  &kp BSPC
&none       &kp DE_CARET      &kp DE_N4  &kp DE_N5      &kp DE_N6     &none               &none  &none  &none  &kp LEFT       &kp DOWN          &kp UP            &kp RIGHT     &kp DE_O_UMLAUT  &none
&kp LSHIFT  &kp DE_LESS_THAN  &kp DE_N7  &kp DE_N8      &kp DE_N9     &none      &none           &none         &kp DE_DOLLAR  &kp DE_AMPERSAND  &kp DE_BACKSLASH  &kp DE_SLASH  &kp DE_A_UMLAUT  &kp RIGHT_SHIFT
                                         &kp RIGHT_ALT  &kp LEFT_GUI  &kp LCTRL                                &none          &kp SPACE         &none
            >;

            sensor-bindings = <&inc_dec_kp LG(KP_PLUS) LG(KP_MINUS)>;
        };

        aerospace {
            bindings = <
&trans  &trans  &kp LA(LC(DE_N1))  &kp LA(LC(DE_N2))  &kp LA(LC(DE_N3))  &kp LA(LC(DE_PERIOD))                    &trans          &trans  &trans  &kp F2  &kp F12  &trans  &trans
&trans  &trans  &kp LA(LC(DE_N4))  &kp LA(LC(DE_N5))  &kp LA(LC(DE_N6))  &kp LA(LC(DE_COMMA))             &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans
&trans  &trans  &kp LA(LC(DE_N7))  &kp LA(LC(DE_N8))  &kp LA(LC(DE_N9))  &trans                 &trans            &trans          &trans  &trans  &trans  &trans   &trans  &trans
                                   &trans             &trans             &kp LEFT_SHIFT                                           &trans  &trans  &trans
            >;
        };
    };
};
